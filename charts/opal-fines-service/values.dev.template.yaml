java:
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  devmemoryRequests: "1Gi"
  devcpuRequests: "250m"
  devmemoryLimits: "2Gi"
  devcpuLimits: "2500m"
  keyVaults:
    opal:
      secrets:
        - name: app-insights-connection-string
          alias: app-insights-connection-string
        - name: launch-darkly-sdk-key
          alias: LAUNCH_DARKLY_SDK_KEY
        - name: AzureADTenantId
          alias: AAD_TENANT_ID
        - name: AzureADClientId
          alias: AAD_CLIENT_ID
        - name: AzureADClientSecret
          alias: AAD_CLIENT_SECRET
        - name: OpalTestUserPassword
          alias: OPAL_TEST_USER_PASSWORD
        - name: OpalLegacyGatewayUsername
          alias: OPAL_LEGACY_GATEWAY_USERNAME
        - name: OpalLegacyGatewayPassword
          alias: OPAL_LEGACY_GATEWAY_PASSWORD
        - name: inbound-user
          alias: OPAL_SFTP_INBOUND_USER
        - name: inbound-password
          alias: OPAL_SFTP_INBOUND_PASSWORD
        - name: outbound-user
          alias: OPAL_SFTP_OUTBOUND_USER
        - name: outbound-password
          alias: OPAL_SFTP_OUTBOUND_PASSWORD
  environment:
    OPAL_FINES_DB_HOST: "{{ .Release.Name }}-postgresql"
    OPAL_FINES_DB_NAME: "{{ .Values.postgresql.auth.database}}"
    OPAL_FINES_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
    OPAL_FINES_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    OPAL_FINES_DB_OPTIONS: "?stringtype=unspecified"
    OPAL_FINES_DB_PORT: 5432
    RUN_DB_MIGRATION_ON_STARTUP: true
    OPAL_FRONTEND_URL: "${DEV_OPAL_FRONT_END_URL}"
    OPAL_USER_SERVICE_API_URL: "https://opal-user-service.staging.platform.hmcts.net/"
    OPAL_LEGACY_GATEWAY_URL: https://opal-legacy-db-stub.staging.platform.hmcts.net/opal
    TESTING_SUPPORT_ENDPOINTS_ENABLED: true
    LAUNCH_DARKLY_ENABLED: false
    FLYWAY_LOCATIONS: classpath:db/migration/allEnvs, classpath:db/migration/devOnly
    APPLICATIONINSIGHTS_ROLE_NAME: "opal-fines-service-pr-${CHANGE_ID}"
    DEFAULT_APP_MODE: ${APP_MODE}
  postgresql:
    enabled: true
    auth:
      username: javapostgres
      password: javapassword
      database: opal-fines-db

opal-frontend:
  enabled: ${DEV_ENABLE_OPAL_FRONT_END}
  nodejs:
    releaseNameOverride: ${SERVICE_NAME}-frontend
    image: 'sdshmctspublic.azurecr.io/opal/frontend:${DEV_OPAL_FRONT_END_IMAGE_SUFFIX}'
    ingressHost: "opal-fines-service-pr-${CHANGE_ID}-frontend.dev.platform.hmcts.net"
    keyVaults:
      opal:
        secrets:
          - app-insights-connection-string
          - launch-darkly-client-id
    environment:
      REDIS_CONNECTION_STRING: redis://${SERVICE_NAME}-redis-master:6379
      OPAL_API_URL: "https://opal-fines-service-pr-${CHANGE_ID}.dev.platform.hmcts.net"
      OPAL_FINES_SERVICE_API_URL: "https://opal-fines-service-pr-${CHANGE_ID}.dev.platform.hmcts.net"
      OPAL_LEGACY_GATEWAY_URL: https://opal-legacy-db-stub.staging.platform.hmcts.net/opal
      OPAL_USER_SERVICE_API_URL: "https://opal-user-service.staging.platform.hmcts.net"
      FRONTEND_HOSTNAME: "${DEV_OPAL_FRONT_END_URL}"
      FEATURES_LAUNCH_DARKLY_ENABLED: false
      FEATURES_SSO_ENABLED: false
      FEATURES_APP_INSIGHTS_ENABLED: false
      APPLICATIONINSIGHTS_ROLE_NAME: "opal-fines-service-pr-${CHANGE_ID}-frontend"
opal-user-service:
  enabled: ${DEV_ENABLE_OPAL_USER_SERVICE}
  java:
    releaseNameOverride: '{{ .Release.Name }}-user-service'
    image: 'sdshmctspublic.azurecr.io/opal/user-service:${DEV_OPAL_USER_SERVICE_IMAGE_SUFFIX}'
    ingressHost: "opal-fines-service-pr-${CHANGE_ID}-user-service.dev.platform.hmcts.net"
    keyVaults:
      opal:
        secrets:
          - name: app-insights-connection-string
            alias: app-insights-connection-string
          - name: launch-darkly-sdk-key
            alias: LAUNCH_DARKLY_SDK_KEY
          - name: AzureADTenantId
            alias: AAD_TENANT_ID
          - name: AzureADClientId
            alias: AAD_CLIENT_ID
          - name: AzureADClientSecret
            alias: AAD_CLIENT_SECRET
          - name: OpalTestUserPassword
            alias: OPAL_TEST_USER_PASSWORD
    environment:
      OPAL_USER_DB_HOST: "{{ .Release.Name }}-postgresql-user-service"
      OPAL_USER_DB_NAME: "user-service-db"
      OPAL_USER_DB_USERNAME: "javapostgres"
      OPAL_USER_DB_PASSWORD: "javapassword"
      OPAL_USER_DB_OPTIONS: "?stringtype=unspecified"
      OPAL_USER_DB_PORT: 5432
      RUN_DB_MIGRATION_ON_STARTUP: true
      OPAL_FRONTEND_URL: "${DEV_OPAL_FRONT_END_URL}"
      TESTING_SUPPORT_ENDPOINTS_ENABLED: true
      LAUNCH_DARKLY_ENABLED: false
      APPLICATIONINSIGHTS_ROLE_NAME: "opal-fines-service-pr-${CHANGE_ID}-user-service"
    postgresql:
      enabled: false

userServicePostgresql:
  enabled: ${DEV_ENABLE_OPAL_USER_SERVICE}
  nameOverride: postgresql-user-service
  auth:
    username: javapostgres
    password: javapassword
    database: user-service-db
  ## Disable Postgres Persistence
  primary:
    persistence:
      enabled: false
  ## Override metrics image for postgresql-exporter
  metrics:
    image:
      registry: hmctspublic.azurecr.io
      repository: imported/bitnami/postgres-exporter
      tag: '0.15.0-debian-12-r16'
  ## Override volume permissions image for os-shell
  volumePermissions:
    image:
      registry: hmctspublic.azurecr.io
      repository: imported/bitnami/os-shell
      tag: '12-debian-12-r18'
redis:
  enabled: true
  architecture: standalone
  master:
    persistence:
      enabled: false
  auth:
    enabled: false
